
pr:
  # Do not run Azure CI for docs-only/example-only changes:
  paths:
    include:
      - '*'
    exclude:
      - docs

variables:
  PETSC_CACHE_FOLDER: $(Pipeline.Workspace)/.petsc

pool:
  vmImage: ubuntu-latest

steps:
 - checkout: self

 - task: Cache@2
   inputs:
      key: $(PETSC_CACHE_KEY)
      restoreKeys: $(PETSC_CACHE_KEY)-*
      path: $(PETSC_CACHE_FOLDER)
      cacheHitVar: CACHE_HIT
   displayName: 'try restoring cached PETSc Installation'

 - script: |
    git submodule update --init --recursive
   displayName: 'Initialize and Update Submodules'

 - bash: |
      pwd
      set -euo pipefail
      sudo apt-get update
      sudo apt-get -y install gcc-9 g++-9 cmake openmpi-bin openmpi-common libopenmpi-dev libmetis-dev libparmetis-dev libeigen3-dev python3 python3-numpy libopenblas-base libopenblas-dev liblua5.3-0 liblua5.3-dev

   displayName: 'before_install'

 - bash: |
      set -euo pipefail
      mkdir $(PETSC_CACHE_FOLDER)
      wget http://ftp.mcs.anl.gov/pub/petsc/release-snapshots/petsc-lite-3.14.6.tar.gz
      tar -xvf petsc-lite-3.14.6.tar.gz
      cd petsc-3.14.6
      pwd
      stop
      ./configure --with-fortran-bindings=0 --with-debugging=0 \
          --with-memalign=32 --with-64-bit-indices \
          CC=mpicc CXX=mpicxx FC=mpif90 --prefix=$(PETSC_CACHE_FOLDER) 
      COPTFLAGS="-g -O3" CXXOPTFLAGS="-g -O3"
      make PETSC_DIR=`pwd` PETSC_ARCH=arch-linux-c-opt -j4
      make PETSC_DIR=`pwd` PETSC_ARCH=arch-linux-c-opt install
      cd ..
   displayName: 'install petsc'
   condition: ne(variables.CACHE_RESTORED, 'true')


 - bash: |
    set -euo pipefail
    mkdir build && cd build
    cmake .. -DCMAKE_PREFIX_PATH=$PETSC_BUILD
    make -j2
    make test
   displayName: 'install and test tandem'
